import{_ as i,M as r,p as o,q as l,Q as e,t as a,N as s,a1 as t}from"./framework-f538f058.js";const c={},d=e("h1",{id:"from-compile-to-private-net",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#from-compile-to-private-net","aria-hidden":"true"},"#"),a(" From Compile To Private-Net")],-1),p=e("h2",{id:"compile-section",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#compile-section","aria-hidden":"true"},"#"),a(" Compile Section")],-1),u={href:"https://golang.google.cn/dl/",target:"_blank",rel:"noopener noreferrer"},m=e("strong",null,"go",-1),h=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/user00000001/TesraMainChain.git
<span class="token builtin class-name">cd</span> TesraMainChain
<span class="token function">make</span> tesramain                     <span class="token comment"># for chain execution file.</span>
<span class="token function">make</span> all                           <span class="token comment"># for all execution files.</span>
<span class="token function">make</span> clean                         <span class="token comment"># clean all compiled results.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="prepare-for-using-it" tabindex="-1"><a class="header-anchor" href="#prepare-for-using-it" aria-hidden="true">#</a> Prepare For Using It</h2><p>Put binary files path into env path or move them into some env paths.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;export PATH=<span class="token environment constant">$PATH</span>:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/build/bin&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">source</span> ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2>`,5),v={href:"https://github.com/ethereum/go-ethereum",target:"_blank",rel:"noopener noreferrer"},b=e("strong",null,"go-ethereum",-1),g={href:"https://geth.ethereum.org/docs/interface/command-line-options",target:"_blank",rel:"noopener noreferrer"},k=e("strong",null,"geth",-1),x=e("a",{href:"/blockchain/language/english/createAccounts"},"Generate Accounts",-1),f=e("a",{href:"/blockchain/language/english/modifyCode"},"Modify Code",-1),_={href:"https://web3js.readthedocs.io/en/v1.2.0/",target:"_blank",rel:"noopener noreferrer"},y=e("strong",null,"web3",-1),T=e("a",{href:"/blockchain/language/english/consoleApi"},"API",-1),I=t(`<ol><li><p>Boot first node.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>**********************!!!PROTECTION POLICY!!!**********************
Waiting For The Next Deployment, Maybe It Will Be Displayed After That.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Under the tesramain console, set the miner to work.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>**********************!!!PROTECTION POLICY!!!**********************
Waiting For The Next Deployment, Maybe It Will Be Displayed After That.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Check pow2pos block and mine status, whether mine blocked.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>eth<span class="token punctuation">.</span>blockNumber
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>When the block number was not increased for a long while. Exit this console.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>exit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Start tesramain with the generated data and mine block.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">;</span>tesramain <span class="token parameter variable">--etherbase</span> <span class="token variable">$index</span> <span class="token parameter variable">--ethash.dagdir</span> ~/tesramainchain/dag/<span class="token variable">$index</span> <span class="token parameter variable">--nodiscover</span> <span class="token parameter variable">--ipcpath</span> ~/tesramainchain/ipc/<span class="token variable">$index</span> <span class="token parameter variable">--datadir</span> ~/tesramainchain/data/<span class="token variable">$index</span> <span class="token parameter variable">--keystore</span> ~/tesramainchain/keystore <span class="token parameter variable">--port</span> <span class="token variable"><span class="token variable">$((</span><span class="token number">20000</span><span class="token operator">+</span>$index<span class="token variable">))</span></span> <span class="token parameter variable">--unlock</span> <span class="token variable">$index</span> <span class="token parameter variable">--password</span> ~/tesramainchain/password <span class="token parameter variable">--verbosity</span> <span class="token number">100</span> <span class="token parameter variable">--firstPos</span> <span class="token number">10</span> <span class="token parameter variable">--mine</span> console
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Watch terminal logs, miner will block again then record slot leader public key. check all accounts infomation. record the matched public key&#39;s index <strong>FirstPosSlotLeaderIndex</strong>.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>**********************!!!PROTECTION POLICY!!!**********************
Waiting For The Next Deployment, Maybe It Will Be Displayed After That.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Show the enode address <strong>FirstBootEnode</strong> of the node just booted.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>tesramain <span class="token parameter variable">--etherbase</span> <span class="token number">0</span> <span class="token parameter variable">--ethash.dagdir</span> ~/tesramainchain/dag/0 <span class="token parameter variable">--nodiscover</span> <span class="token parameter variable">--ipcpath</span> ~/tesramainchain/ipc/0 <span class="token parameter variable">--keystore</span> ~/tesramainchain/keystore <span class="token parameter variable">--unlock</span> <span class="token number">0</span> <span class="token parameter variable">--password</span> ~/tesramainchain/password console <span class="token parameter variable">--exec</span> <span class="token string">&quot;admin.nodeInfo.enode&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Boot the <strong>FirstPosSlotLeader</strong> node.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>**********************!!!PROTECTION POLICY!!!**********************
Waiting For The Next Deployment, Maybe It Will Be Displayed After That.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Then add <strong>FirstBootEnode</strong> as a peer, and set miner to work.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>admin<span class="token punctuation">.</span><span class="token function">addPeer</span><span class="token punctuation">(</span>FirstBootEnode<span class="token punctuation">)</span>
miner<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Check the block number whether increased.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>**********************!!!PROTECTION POLICY!!!**********************
Waiting For The Next Deployment, Maybe It Will Be Displayed After That.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>After these operations, the private net with two nodes has been set up, and the consensus protocol has been upgraded from pow to (d)pos.</p>`,2);function w(C,P){const n=r("ExternalLinkIcon");return o(),l("div",null,[d,p,e("p",null,[a("Get the main chain source. Make sure that "),e("a",u,[m,s(n)]),a(" is ready.")]),h,e("p",null,[a("Tesra Main Chain bases on "),e("a",v,[b,s(n)]),a(", for more common usage details, you might need to visit "),e("a",g,[k,s(n)]),a(" documents. Before using tesramain you need prepare some accounts. See "),x,a(", and prepare 7 or more accounts to add some accounts into source code, compile again to gain final tesramain, "),f,a(". Use tesramain's console bases on "),e("a",_,[y,s(n)]),a(", include pos modification could read this, "),T,a(".")]),I])}const O=i(c,[["render",w],["__file","index.html.vue"]]);export{O as default};
